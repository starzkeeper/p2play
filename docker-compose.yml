services:
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    ports:
      - "777:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  backend_client:
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    command: uvicorn backend.main.web:app --reload --host 0.0.0.0 --port 8080 --forwarded-allow-ips='*' --proxy-headers
    #hypercorn backend.main:app --bind 0.0.0.0:8080 --certfile=cert.pem --keyfile=key.pem
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_URL
    volumes:
      - ./backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    command: postgres -c 'max_connections=500'
    restart: on-failure
    ports:
      - "${OUT_POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_HOST
      - POSTGRES_DB # from .env
      - POSTGRES_USER # from .env
      - POSTGRES_PASSWORD # from .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 10s
      retries: 3

  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
    #    expose:
    #      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    env_file: .env
    ports:
      - '27017:27017'
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
#    volumes:
#      - mongo_data:/data/db
#      - ./db_confs/mongod.conf:/etc/mongo/mongod.conf
#    command: [ "mongod", "--config", "/etc/mongo/mongod.conf" ]

volumes:
  postgres_data: